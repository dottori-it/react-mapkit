{"version":3,"file":"react-mapkit.cjs.production.min.js","sources":["../src/MapkitProvider.tsx","../src/utils.ts","../src/useMap.tsx","../src/Map.tsx","../src/Marker.tsx"],"sourcesContent":["/* global mapkit */\n\nimport React from 'react'\nimport load from 'little-loader'\n\ntype MapkitContextType = {\n  isInProvider: boolean\n  mapkit: typeof mapkit | undefined\n}\n\nexport const MapkitContext = React.createContext<MapkitContextType>({\n  isInProvider: false,\n  mapkit: undefined,\n})\n\ntype ProviderProps = {\n  // ‚ö†Ô∏è Pick between callbackUrl or token.\n  // https://developer.apple.com/documentation/mapkitjs/mapkit/2974045-init\n  tokenOrCallback: string\n  language: string\n}\n\nexport const MapkitProvider: React.FC<ProviderProps> = ({\n  tokenOrCallback,\n  language,\n  children,\n}) => {\n  const existingContext = React.useContext(MapkitContext)\n\n  const [context, setContext] = React.useState<MapkitContextType>({\n    mapkit: existingContext.mapkit,\n    isInProvider: true,\n  })\n\n  React.useEffect(() => {\n    if (!existingContext.isInProvider) {\n      load('https://cdn.apple-mapkit.com/mk/5.x.x/mapkit.js', () => {\n        const isCallback = tokenOrCallback.includes('/')\n\n        // init mapkit\n        mapkit.init({\n          authorizationCallback: (done) => {\n            if (isCallback) {\n              fetch(tokenOrCallback)\n                .then((res) => res.text())\n                .then(done)\n            } else {\n              done(tokenOrCallback)\n            }\n          },\n          language,\n        })\n        setContext({ mapkit, isInProvider: true })\n      })\n    }\n  }, [existingContext.isInProvider, tokenOrCallback, language])\n\n  return <MapkitContext.Provider value={context} children={children} />\n}\n","/* global mapkit */\n\n// Typescript Helpers\ntype Merge<M, N> = Omit<M, Extract<keyof M, keyof N>> & N\ntype ConstructorParameters<T> = T extends new (...args: infer U) => any\n  ? U\n  : never\n\ntype MapConstructionOptions = NonNullable<\n  ConstructorParameters<typeof mapkit.Map>[1]\n>\n\ntype MarkerConstructionOptions = NonNullable<\n  ConstructorParameters<typeof mapkit.MarkerAnnotation>[1]\n>\n\ntype PaddingConstructorOptions = NonNullable<\n  ConstructorParameters<typeof mapkit.Padding>[0]\n>\n\nexport type NumberTuple = [number, number]\nexport type Rect = [number, number, number, number]\nexport type PaddingType = number | PaddingConstructorOptions\nexport type RegionType = {\n  latitude: number\n  longitude: number\n  latitudeSpan: number\n  longitudeSpan: number\n}\nexport type ImageUrl = {\n  '1': string\n  '2'?: string\n  '3'?: string\n}\n\n// Mapkit helpers\n\nexport const createPadding = (padding: PaddingType) => {\n  return new mapkit.Padding(\n    typeof padding === 'number'\n      ? {\n          top: padding,\n          right: padding,\n          bottom: padding,\n          left: padding,\n        }\n      : padding,\n  )\n}\n\nexport const createCoordinate = (latitude: number, longitude: number) => {\n  return new mapkit.Coordinate(latitude, longitude)\n}\n\nexport const createCoordinateSpan = (\n  latitudeDelta: number,\n  longitudeDelta: number,\n) => {\n  return new mapkit.CoordinateSpan(latitudeDelta, longitudeDelta)\n}\n\nexport const createCoordinateRegionFromValues = (region: RegionType) => {\n  return createCoordinateRegion(\n    createCoordinate(region.latitude, region.longitude),\n    createCoordinateSpan(region.latitudeSpan, region.longitudeSpan),\n  )\n}\n\nexport const createCoordinateRegion = (\n  center: mapkit.Coordinate,\n  span: mapkit.CoordinateSpan,\n) => {\n  return new mapkit.CoordinateRegion(center, span)\n}\n\nexport const createMapPoint = (x: number, y: number) => {\n  return new mapkit.MapPoint(x, y)\n}\n\nexport const createMapRect = (\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n) => {\n  return new mapkit.MapRect(x, y, width, height)\n}\n\n// üó∫Ô∏è Map Options\n\n// these are the props we expose to users.\nexport type MapOptions = Merge<\n  MapConstructionOptions,\n  {\n    visibleMapRect?: Rect\n    region?: RegionType\n    center?: NumberTuple\n    padding?: PaddingType\n  }\n>\n\n// this function takes simple props and turns them into the mapkit options that mapkit expects\nexport const propsToMapConstructionOptions = ({\n  visibleMapRect,\n  region,\n  center,\n  padding,\n  ...options\n}: MapOptions) => ({\n  visibleMapRect: visibleMapRect && createMapRect(...visibleMapRect),\n  region: region && createCoordinateRegionFromValues(region),\n  center: center && createCoordinate(...center),\n  padding: padding ? createPadding(padding) : createPadding(0),\n  ...options,\n})\n\n// üìå Marker Options\n\n// these are the props we expose to users.\nexport type MarkerOptions = Merge<\n  MarkerConstructionOptions,\n  {\n    padding?: PaddingType\n  }\n>\n\nexport const propsToMarkerConstructionOptions = ({\n  padding,\n  ...options\n}: MarkerOptions) => {\n  return {\n    padding: padding ? createPadding(padding) : createPadding(0),\n    ...options,\n  }\n}\n","import React from 'react'\n\nimport { MapkitContext } from './MapkitProvider'\nimport { MapOptions, propsToMapConstructionOptions } from './utils'\n\nimport {\n  NumberTuple,\n  Rect,\n  RegionType,\n  createCoordinate,\n  createMapRect,\n  createCoordinateRegionFromValues,\n} from './utils'\n\nexport const useMap = (defaultOptions: MapOptions = {}) => {\n  const [defaultMapOptions] = React.useState(defaultOptions)\n  let { mapkit } = React.useContext(MapkitContext)\n  let mapRef = React.useRef<HTMLDivElement>(null)\n  let [map, setMap] = React.useState<mapkit.Map>()\n\n  React.useEffect(() => {\n    if (mapkit && mapRef.current) {\n      const newMap = new mapkit.Map(\n        mapRef.current,\n        propsToMapConstructionOptions(defaultMapOptions),\n      )\n      setMap(newMap)\n    }\n  }, [mapRef, mapkit])\n\n  // Clean up the map on unmount\n  React.useEffect(() => {\n    return () => {\n      if (map) {\n        map.destroy()\n      }\n    }\n  }, [])\n\n  return {\n    mapkit,\n    map,\n    mapProps: {\n      mapkit,\n      map,\n      mapRef,\n    },\n    setRotation: React.useCallback(\n      (rotationValue: number, isAnimated: boolean = false) => {\n        if (map) {\n          map.setRotationAnimated(rotationValue, isAnimated)\n        }\n      },\n      [map],\n    ),\n    setCenter: React.useCallback(\n      (centerValue: NumberTuple, isAnimated: boolean = false) => {\n        if (map) {\n          map.setCenterAnimated(createCoordinate(...centerValue), isAnimated)\n        }\n      },\n      [map],\n    ),\n    setRegion: React.useCallback(\n      (region: RegionType, isAnimated: boolean = false) => {\n        if (map) {\n          map.setRegionAnimated(\n            createCoordinateRegionFromValues(region),\n            isAnimated,\n          )\n        }\n      },\n      [map],\n    ),\n    setVisibleMapRect: React.useCallback(\n      (visibleMapRect: Rect, isAnimated: boolean = false) => {\n        if (map) {\n          map.setVisibleMapRectAnimated(\n            createMapRect(...visibleMapRect),\n            isAnimated,\n          )\n        }\n      },\n      [map],\n    ),\n  }\n}\n","/* global mapkit */\n\nimport React from 'react'\n\nimport { MapkitContext, MapkitProvider } from './MapkitProvider'\nimport { useMap } from './useMap'\nimport { MapOptions } from './utils'\n\ntype MapRef = React.RefObject<HTMLDivElement>\n\ntype MapContextType = {\n  map?: mapkit.Map\n  mapkit?: typeof mapkit\n}\n\nexport const MapContext = React.createContext<MapContextType>({\n  map: undefined,\n  mapkit: undefined,\n})\n\nconst MapProvider: React.FC<{ context: MapContextType }> = ({\n  children,\n  context,\n}) => {\n  return <MapContext.Provider value={context} children={children} />\n}\n\n// this component is the parent to the mapkit generated map components\nconst MapContainer: React.FC<{ mapRef: MapRef }> = ({ children, mapRef }) => {\n  return (\n    <div\n      ref={mapRef}\n      style={{ width: '100%', height: '100%' }}\n      children={children}\n    />\n  )\n}\n\nconst CreateMap: React.FC<MapOptions> = ({ children, ...defaultOptions }) => {\n  const {\n    mapProps: { mapkit, map, mapRef },\n  } = useMap(defaultOptions)\n\n  return (\n    <MapProvider context={{ mapkit, map }}>\n      <MapContainer mapRef={mapRef} children={children} />\n    </MapProvider>\n  )\n}\n\nexport const Map: React.FC<\n  {\n    // ‚ö†Ô∏è Pick between callbackUrl or token.\n    // https://developer.apple.com/documentation/mapkitjs/mapkit/2974045-init\n    // not needed if within a `MapProvider`\n    tokenOrCallback?: string\n    language?: string\n    mapRef?: MapRef\n    mapkit?: typeof mapkit\n    map?: mapkit.Map\n  } & MapOptions\n> = ({ tokenOrCallback, language = 'en', mapkit, map, mapRef, ...props }) => {\n  let context = React.useContext(MapkitContext)\n\n  // map has already been created, we just need to setup the provider\n  if (mapRef) {\n    return (\n      <MapProvider context={{ mapkit, map }}>\n        <MapContainer mapRef={mapRef} {...props} />\n      </MapProvider>\n    )\n  }\n\n  // map hasn't yet been created, lets create it!\n  const mapBox = <CreateMap {...props} />\n\n  // we are in a provider, just return the map\n  if (context.isInProvider) {\n    return mapBox\n  }\n\n  // No Provider setup provider around map\n  if (!tokenOrCallback) {\n    throw new Error(\n      '`tokenOrCallback` is required. Either add it to this `Map` component or to a `MapkitProvider` parent of this component.',\n    )\n  }\n\n  return (\n    <MapkitProvider\n      tokenOrCallback={tokenOrCallback}\n      language={language}\n      children={mapBox}\n    />\n  )\n}\n","import React from 'react'\n\nimport { MapContext } from './Map'\n\nimport {\n  MarkerOptions,\n  createCoordinate,\n  propsToMarkerConstructionOptions,\n} from './utils'\n\ntype MarkerProps = {\n  latitude: number\n  longitude: number\n} & MarkerOptions\n\nexport const Marker: React.FC<MarkerProps> = ({\n  latitude,\n  longitude,\n  ...options\n}) => {\n  const { mapkit, map } = React.useContext(MapContext)\n  const marker = React.useRef<mapkit.MarkerAnnotation>()\n\n  React.useEffect(() => {\n    if (mapkit && map) {\n      marker.current = new mapkit.MarkerAnnotation(\n        createCoordinate(latitude, longitude),\n        propsToMarkerConstructionOptions(options),\n      )\n\n      map.addAnnotation(marker.current)\n    }\n  }, [mapkit, map])\n\n  return null\n}\n"],"names":["MapkitContext","React","createContext","isInProvider","mapkit","undefined","MapkitProvider","tokenOrCallback","language","children","existingContext","useContext","useState","context","setContext","useEffect","load","isCallback","includes","init","authorizationCallback","done","fetch","then","res","text","Provider","value","createPadding","padding","Padding","top","right","bottom","left","createCoordinate","latitude","longitude","Coordinate","createCoordinateRegionFromValues","region","createCoordinateRegion","CoordinateSpan","latitudeSpan","longitudeSpan","center","span","CoordinateRegion","createMapRect","x","y","width","height","MapRect","useMap","defaultOptions","defaultMapOptions","mapRef","useRef","map","setMap","current","newMap","Map","visibleMapRect","options","destroy","mapProps","setRotation","useCallback","rotationValue","isAnimated","setRotationAnimated","setCenter","centerValue","setCenterAnimated","setRegion","setRegionAnimated","setVisibleMapRect","setVisibleMapRectAnimated","MapContext","MapProvider","MapContainer","ref","style","CreateMap","props","mapBox","Error","marker","MarkerAnnotation","propsToMarkerConstructionOptions","addAnnotation"],"mappings":"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"}